/**
 * type definitions are generated initially by vue-tsc.
 * Because, every component has same type definition,
 * the definition is cloned for every component.
 *
 * NOTE: If in future something changed, the definition should
 * be regenerated by vue-tsc in shared/TesComponent.d.ts
 */

import {copyFile, existsSync, mkdirSync, readdirSync, appendFileSync, copyFileSync} from "fs";
import {dirname, resolve} from "path";
import {fileURLToPath} from "url";

const __dirname = dirname(fileURLToPath(import.meta.url));
const directory = resolve(__dirname + "/components");
const directoryTypes = resolve(__dirname + "/types");

function generateTypes() {
    let names = readdirSync(directory);

    if (!existsSync(__dirname + "/../dist/components")) {
        mkdirSync(__dirname + "/../dist/components");
    }

    for (let x of names) {
        copyFileSync(
            resolve(__dirname + "/shared/TestComponent.d.ts"),
            resolve(__dirname + "/../dist/components/" + x + ".d.ts"),
        );
        appendFileSync(
            __dirname + "/../dist/components/" + x + ".d.ts",
            '//# sourceMappingURL=' + x + '.d.ts.map'
        )
    }


    console.log("Component definitions generated");

    let types = readdirSync(directoryTypes);

    if (!existsSync(__dirname + "/../dist/types")) {
        mkdirSync(__dirname + "/../dist/types");
    }

    for (let x of types) {
        copyFile(
            resolve(__dirname + "/types/" + x),
            resolve(__dirname + "/../dist/types/" + x),
            (err) => {
                if (err) throw err;
            }
        );
    }

    console.log("Basic Type definitions generated");

    copyFileSync(
        resolve(__dirname + "/index.ts"),
        resolve(__dirname + "/../dist/index.d.ts"),
    );
}

generateTypes();

